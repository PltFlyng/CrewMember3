
public void displaypdf(String FileName) {

        File file = null;
        file = new File(FileName);
        //Toast.makeText(getApplicationContext(), file.toString() , Toast.LENGTH_LONG).show();
        if(file.exists()) {
            Intent target = new Intent(Intent.ACTION_VIEW);
            target.setDataAndType(Uri.fromFile(file), "application/pdf");
            target.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);

            Intent intent = Intent.createChooser(target, "Open File");
            try {
                startActivity(intent);
            } catch (ActivityNotFoundException e) {
                // Instruct the user to install a PDF reader here, or something
            }
        }
        else
            Toast.makeText(getApplicationContext(), "File path is incorrect." , Toast.LENGTH_LONG).show();
    }





  for (Map.Entry<String, List<String>> k : con.getHeaderFields().entrySet()) {
            for (String v : k.getValue()) {
                System.out.println(k.getKey() + ":" + v);
            }
        }


        BufferedReader reader;
        String serverresponse = con.getResponseMessage();
        StringBuilder SB = new StringBuilder();
        reader = new BufferedReader(new InputStreamReader(con.getInputStream()));
        String line;
        while ((line = reader.readLine()) != null) {
            SB.append(line + "\n");
        }
        reader.close();
        Log.d("Http response", SB.toString());




--------------------------------------------






 public void Login_test() throws Exception {
        String test_id = "6575"; //removed for this snippet
        String test_pass = "HutchinsonD1984"; //removed for this snippet
        String CrewnetUrl = "http://209.59.124.244/crewnet/login.aspx";
        String viewstate = "dDwtMjAxNjc0MDEyMDt0PDtsPGk8MT47PjtsPHQ8O2w8aTwxPjs+O2w8dDw7bDxpPDE+Oz47bDx0PDtsPGk8MT47PjtsPHQ8cDxsPHNyYzs+O2w8Li9ncmFwaGljcy9ibGFua2xvZ29ubG9nby5naWY7Pj47Oz47Pj47Pj47Pj47Pj47PoFjQ5nqGE+ozvmbjaYL4fJy99fs";
        String Home_url = "http://209.59.124.244/crewnet/home.aspx";

        Log.d("Http body :", "Test");

       String final_url = URLEncoder.encode(CrewnetUrl, "UTF-8");

        DefaultHttpClient httpclient = new DefaultHttpClient();

        HttpGet httpget = new HttpGet(CrewnetUrl);

        HttpResponse response = httpclient.execute(httpget);
        HttpEntity entity = response.getEntity();

        System.out.println("Login form get: " + response.getStatusLine());
        if (entity != null) {
            entity.consumeContent();
        }
        System.out.println("Initial set of cookies:");
        List<Cookie> cookies = httpclient.getCookieStore().getCookies();
        if (cookies.isEmpty()) {
            System.out.println("None");
        } else {
            for (int i = 0; i < cookies.size(); i++) {
                System.out.println("- " + cookies.get(i).toString());
            }
        }

        HttpPost httpost = new HttpPost(CrewnetUrl);

        List<NameValuePair> nvps = new ArrayList<NameValuePair>();
        nvps.add(new BasicNameValuePair("txtUserName", test_id));
        nvps.add(new BasicNameValuePair("txtPassword", test_pass));
        nvps.add(new BasicNameValuePair("cmdLogon", "Log in"));
        nvps.add(new BasicNameValuePair("__VIEWSTATE=", viewstate));


        httpost.setEntity(new UrlEncodedFormEntity(nvps, HTTP.UTF_8));

        response = httpclient.execute(httpost);
        entity = response.getEntity();

        String headers = response.getAllHeaders().toString();
        System.out.println("Headers: " + headers);
        System.out.println("Login form get: " + response.getStatusLine());
        if (entity != null) {
            entity.consumeContent();
        }

        System.out.println("Post logon cookies:");
        cookies = httpclient.getCookieStore().getCookies();
        if (cookies.isEmpty()) {
            System.out.println("None");
        } else {
            for (int i = 0; i < cookies.size(); i++) {
                System.out.println("- " + cookies.get(i).toString());
            }
        }

        // When HttpClient instance is no longer needed,
        // shut down the connection manager to ensure
        // immediate deallocation of all system resources
        httpclient.getConnectionManager().shutdown();

    }



     public static void Login() throws IOException {

            String test_id = "6575"; //removed for this snippet
            String test_pass = "HutchinsonD1984"; //removed for this snippet
            String CrewnetUrl = "http://209.59.124.244/crewnet/login.aspx";
            String viewstate = "dDwtMjAxNjc0MDEyMDt0PDtsPGk8MT47PjtsPHQ8O2w8aTwxPjs+O2w8dDw7bDxpPDE+Oz47bDx0PDtsPGk8MT47PjtsPHQ8cDxsPHNyYzs+O2w8Li9ncmFwaGljcy9ibGFua2xvZ29ubG9nby5naWY7Pj47Oz47Pj47Pj47Pj47Pj47PoFjQ5nqGE+ozvmbjaYL4fJy99fs";
            String Home_url = "http://209.59.124.244/crewnet/home.aspx";
            URL url = new URL("http://209.59.124.244/crewnet/login.aspx");
            String MySessionID = "0";

            CookieManager cookieManager = new CookieManager();
            //CookieHandler.setDefault(cookieManager);
            CookieHandler.setDefault(new CookieManager(null, CookiePolicy.ACCEPT_ALL));


            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setReadTimeout(10000);
            conn.setConnectTimeout(15000);
            conn.setRequestMethod("GET");
            conn.setDoInput(true);
            conn.setDoOutput(true);


            Uri.Builder builder = new Uri.Builder()
                    .appendQueryParameter("txtUserName", test_id)
                    .appendQueryParameter("txtPassword", test_pass)
                    .appendQueryParameter("cmdLogon", "Log in")
                    .appendQueryParameter("__VIEWSTATE=", viewstate);
            String query = builder.build().getEncodedQuery();

            OutputStream os = conn.getOutputStream();
            BufferedWriter writer = new BufferedWriter(
                    new OutputStreamWriter(os, "UTF-8"));
            writer.write(query);
            writer.flush();
            writer.close();
            os.close();

            conn.connect();

            for (Map.Entry<String, List<String>> k : conn.getHeaderFields().entrySet()) {
                for (String v : k.getValue()) {
                    System.out.println(k.getKey() + ":" + v);
                             }
            }


            BufferedReader reader;
            String serverresponse = conn.getResponseMessage();
            StringBuilder SB = new StringBuilder();
            reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                SB.append(line + "\n");
            }
            reader.close();
            Log.d("Http response", SB.toString());


        }